version: '3'
services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - mongo-net

  mongo1:
    image: mongo:6.0
    container_name: mongo1
    ports:
      - 27117:27017
    volumes:
      - ../data1:/data/db
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    networks:
      - mongo-net

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    ports:
      - 27017:27017
    volumes:
      - ../data2:/data/db
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    networks:
      - mongo-net

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    ports:
      - 27019:27017
    volumes:
      - ../data3:/data/db
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    networks:
      - mongo-net

  mongo-init:
    build: .
    container_name: mongo-init
    command: node database/mongo-init.js
    volumes:
      - ../database:/app/database
    networks:
      - mongo-net
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    restart: on-failure

  myapp:
    build: .
    container_name: myapp
    ports:
      - "3001:3000"
    depends_on:
      mongo-init:
        condition: service_completed_successfully
    environment:
      MONGODB_URI: "mongodb://mongo1:27017,mongo2:27017,mongo3:27017/myDatabase?replicaSet=rs0"
      WAIT_HOSTS: mongo1:27017,mongo2:27017,mongo3:27017
      PORT: 3000
    networks:
      - mongo-net
    restart: always

networks:
  mongo-net:
    driver: bridge

volumes:
  jenkins_home:
    external: true 