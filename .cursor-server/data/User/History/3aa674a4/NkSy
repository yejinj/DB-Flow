pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = "dpwlscho/my-node-app"
        DOCKER_TAG = "${BUILD_NUMBER}"
        PREV_BUILD_TAG = "${BUILD_NUMBER.toInteger() - 1}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh """
                    docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
                    docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest
                """
            }
        }
        
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh """
                        echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
                        docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                        docker push ${DOCKER_IMAGE}:latest
                    """
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    try {
                        // 새 버전 배포
                        sh """
                            docker stop my-node-app || true
                            docker rm my-node-app || true
                            docker run -d --name my-node-app -p 3000:3000 ${DOCKER_IMAGE}:${DOCKER_TAG}
                        """
                        
                        // 배포 후 헬스체크 (5초 대기 후 확인)
                        sh """
                            sleep 5
                            curl -f http://localhost:3000/ || exit 1
                        """
                    } catch (Exception e) {
                        echo '새 버전 배포 실패. 이전 버전으로 롤백합니다.'
                        sh """
                            docker stop my-node-app || true
                            docker rm my-node-app || true
                            docker run -d --name my-node-app -p 3000:3000 ${DOCKER_IMAGE}:${PREV_BUILD_TAG}
                        """
                        currentBuild.result = 'FAILURE'
                        error '배포 실패로 인한 롤백 수행됨'
                    }
                }
            }
        }
    }
    
    post {
        failure {
            echo '파이프라인 실패: 관리자에게 알림 발송'
            // 여기에 알림 로직 추가 가능 (이메일, 슬랙 등)
        }
        always {
            // 불필요한 도커 이미지 정리
            sh 'docker image prune -f'
        }
    }
}
