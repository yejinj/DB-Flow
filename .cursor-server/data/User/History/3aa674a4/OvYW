pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = "dpwlscho/my-node-app"
        DOCKER_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh """
                    docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
                    docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest
                """
                script {
                    def branchName = env.BRANCH_NAME
                    def envTag = ''
                    
                    switch(branchName) {
                        case 'develop':
                            envTag = 'dev'
                            break
                        case 'staging':
                            envTag = 'staging'
                            break
                        case 'main':
                            envTag = 'prod'
                            break
                        default:
                            envTag = 'dev'
                    }
                    
                    sh "docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:${envTag}"
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh """
                        echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
                        docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                        docker push ${DOCKER_IMAGE}:latest
                    """
                    script {
                        def branchName = env.BRANCH_NAME
                        if (branchName in ['develop', 'staging', 'main']) {
                            def envTag = branchName == 'main' ? 'prod' : branchName
                            sh "docker push ${DOCKER_IMAGE}:${envTag}"
                        }
                    }
                }
            }
        }
    }
}
